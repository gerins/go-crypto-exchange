version: '3.8'

services:
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - docker-networks

  postgres:
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - docker-networks
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=default

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.0 #Stable Images
    restart: unless-stopped
    ports:
      - 9092:9092
      - 19092:19092
    networks:
      - docker-networks
    environment:
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:19092,EXTERNAL://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=EXTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.6.2
    restart: unless-stopped
    ports:
      - 2181:2181
    networks:
      - docker-networks

  core-engine:
    build: ./services/core-engine
    ports:
      - 8070:8070
    networks:
      - docker-networks
    environment:
      - DATABASE_MASTER_HOST=postgres
      - DATABASE_SLAVE_HOST=postgres
      - REDIS_ADDRESS=redis:6379
      - KAFKA_ADDRESS=kafka:19092

  matching-engine:
    build: ./services/matching-engine
    ports:
      - 8083:8083
    networks:
      - docker-networks
    environment:
      - REDIS_ADDRESS=redis:6379
      - KAFKA_ADDRESS=kafka:19092


networks:
  docker-networks:
    name: docker-networks
    driver: bridge
    external: false
